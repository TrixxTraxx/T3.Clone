@using T3.Clone.Client.Caches
@using T3.Clone.Client.Models
@inject IJSRuntime JSRuntime
@inherits MessagePartComponent

<pre class="code-block" id="@ElementId">
    <code>@Content</code>
</pre>

@code {
    public Guid ElementId { get; set; } = Guid.NewGuid();
    [Parameter] public MessageCache Message { get; set; } = new();
    [Parameter] public string Content { get; set; } = string.Empty;
    [Parameter] public string? Language { get; set; }

    private DateTime _lastHighlightTime = DateTime.MinValue;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await HighlightDebounced();
    }

    public override async Task OnTokenReceived(string fullContent)
    {
        Content = fullContent;
        // Only re-render this component when regular tokens are received
        StateHasChanged();
    }

    private async Task HighlightDebounced()
    {
        if (!string.IsNullOrWhiteSpace(Content))
        {
            if (DateTime.Now - _lastHighlightTime < TimeSpan.FromMilliseconds(250)) return;

            _lastHighlightTime = DateTime.Now;

            // Ensure the message is fully rendered before highlighting
            await Task.Delay(50);

            // Use JS interop to highlight the code block
            await JSRuntime.InvokeVoidAsync("highlightCodeBlock", ElementId);
        }
    }
} 