@using T3.Clone.Client.Caches

<div class="chat-tree-container">
    @if (Messages.Any())
    {
        @foreach (var message in Messages)
        {
            <ChatMessage
                @key="message.Message.Id"
                Message="message"
                MessageTree="MessageTree"
                OnBranchSelected="OnBranchSelected"
                OnRegenerateMessage="OnRegenerateMessage"
                OnContentChanged="OnMessageContentChanged"
            />
        }

    }
    else
    {
        <EmptyChatComponent/>
    }
</div>

@code {
    [Parameter] public List<MessageCache> Messages { get; set; } = new();
    [Parameter] public MessageTreeDto MessageTree { get; set; } = new MessageTreeDto();
    [Parameter] public EventCallback<int> OnBranchSelected { get; set; }
    [Parameter] public EventCallback<int> OnRegenerateMessage { get; set; }
    [Parameter] public EventCallback OnMessageContentChanged { get; set; }
    
    private int _lastMessagesCount = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // When number of messages changes (new message sent/received or message removed)
        if (Messages.Count != _lastMessagesCount)
        {
            _lastMessagesCount = Messages.Count;
            await OnMessageContentChanged.InvokeAsync(null);
        }
    }
}