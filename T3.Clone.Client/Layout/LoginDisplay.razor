@using T3.Clone.Dtos.User
@inject NavigationManager Navigation
@inject AppsettingsService AppsettingsService

@if (User == null)
{
    <MudButton
        StartIcon="@Icons.Material.Filled.Login"
        Variant="Variant.Filled"
        Color="Color.Primary"
        Size="Size.Medium"
        OnClick="Login"
        Class="login-button"
    >
        Log In
    </MudButton>
}
else
{
    <div class="profile-section">
        @if (!string.IsNullOrEmpty(User.ProfilePictureUrl))
        {
            <MudAvatar
                Color="Color.Primary"
                Size="Size.Medium">
                <MudImage
                    Src="@GetProfilePictureUrl(User)"/>
            </MudAvatar>
        }
        <MudText>
            @User.DisplayName
        </MudText>


        <MudButton
            StartIcon="@Icons.Material.Filled.SwitchAccount"
            Variant="Variant.Filled"
            Color="Color.Primary"
            Size="Size.Medium"
            OnClick="Login"
            Class="login-button">
            Switch Account
        </MudButton>
    </div>
}

@code{
    [CascadingParameter(Name = "User")] public UserDto? User { get; set; }

    protected override void OnParametersSet()
    {
        StateHasChanged();
        base.OnParametersSet();
    }

    public void Login()
    {
        Navigation.NavigateTo(AppsettingsService.ServerUrl + "/Account/Login", true);
    }

    public void BeginLogOut()
    {
        Navigation.NavigateTo(AppsettingsService.ServerUrl + "/Account/Logout", true);
    }

    private string? GetProfilePictureUrl(UserDto user)
    {
        return $"{AppsettingsService.ServerUrl}/api/Authentication/profilePicture";
    }
}
