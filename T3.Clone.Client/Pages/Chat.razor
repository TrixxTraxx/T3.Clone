@page "/"
@page "/chat"

<PageTitle>T3.Clone - AI Chat Assistant</PageTitle>

<div class="chat-container">
    @if (messages.Count == 0)
    {
        <div class="welcome-section">
            <div class="welcome-card">
                <h1 class="welcome-title">Welcome to T3.Clone</h1>
                <p class="welcome-subtitle">
                    Your intelligent AI assistant for the Cloneathon. Experience the power of conversational AI 
                    with a modern, intuitive interface designed for productivity and creativity.
                </p>
                
                <div class="starter-prompts">
                    <div class="starter-grid">
                        <div class="starter-card" @onclick="@(() => SendMessage(codeHelperPrompt))">
                            <div class="starter-header">
                                <span class="starter-icon">ðŸ’»</span>
                                <h3>Code Helper</h3>
                            </div>
                            <p class="starter-description">Help me write a function in C#</p>
                        </div>
                        
                        <div class="starter-card" @onclick="@(() => SendMessage(explainTechPrompt))">
                            <div class="starter-header">
                                <span class="starter-icon">ðŸ§ </span>
                                <h3>Explain Tech</h3>
                            </div>
                            <p class="starter-description">How does Blazor WebAssembly work?</p>
                        </div>
                        
                        <div class="starter-card" @onclick="@(() => SendMessage(codeReviewPrompt))">
                            <div class="starter-header">
                                <span class="starter-icon">ðŸ“‹</span>
                                <h3>Code Review</h3>
                            </div>
                            <p class="starter-description">Review my code for best practices</p>
                        </div>
                        
                        <div class="starter-card" @onclick="@(() => SendMessage(brainstormPrompt))">
                            <div class="starter-header">
                                <span class="starter-icon">ðŸ’¡</span>
                                <h3>Brainstorm</h3>
                            </div>
                            <p class="starter-description">Help me brainstorm project ideas</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="messages-container">
            @foreach (var message in messages)
            {
                <div class="message-wrapper @(message.IsUser ? "user-message" : "ai-message")">
                    <div class="message-content">
                        <div class="message-avatar @(message.IsUser ? "user-avatar" : "ai-avatar")">
                            @(message.IsUser ? "ðŸ‘¤" : "ðŸ¤–")
                        </div>
                        <div class="message-bubble">
                            <p class="message-text">@message.Content</p>
                            <span class="message-time">@message.Timestamp.ToString("HH:mm")</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<div class="chat-input-area">
    <div class="input-container">
        <div class="input-wrapper">
            <input type="text" 
                   @bind="currentMessage"
                   @onkeydown="HandleKeyPress"
                   placeholder="Type your message here... (Press Enter to send)"
                   class="chat-input" />
            <button class="send-btn" @onclick="() => SendMessage(currentMessage)" 
                    disabled="@(string.IsNullOrWhiteSpace(currentMessage))">
                ðŸ“¤
            </button>
        </div>
        <p class="input-hint">T3.Clone can make mistakes. Consider checking important information.</p>
    </div>
</div>

@code {
    private string currentMessage = "";
    private List<ChatMessage> messages = new();

    // Predefined prompts
    private string codeHelperPrompt = "Help me write a function in C#";
    private string explainTechPrompt = "Explain how Blazor WebAssembly works";
    private string codeReviewPrompt = "Review my code for best practices";
    private string brainstormPrompt = "Help me brainstorm ideas for my project";

    public class ChatMessage
    {
        public string Content { get; set; } = "";
        public bool IsUser { get; set; }
        public DateTime Timestamp { get; set; } = DateTime.Now;
    }

    private async Task SendMessage(string message)
    {
        if (string.IsNullOrWhiteSpace(message)) return;

        // Add user message
        messages.Add(new ChatMessage 
        { 
            Content = message.Trim(), 
            IsUser = true,
            Timestamp = DateTime.Now
        });

        currentMessage = "";
        StateHasChanged();

        // Simulate AI response (placeholder for now)
        await Task.Delay(1000);
        
        messages.Add(new ChatMessage 
        { 
            Content = "I'm T3.Clone, your AI assistant! I'm currently in development mode. Full chat functionality will be available soon. For now, I can acknowledge your message: \"" + message.Trim() + "\"",
            IsUser = false,
            Timestamp = DateTime.Now
        });

        StateHasChanged();
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !e.ShiftKey)
        {
            await SendMessage(currentMessage);
        }
    }
} 